#include "Common.ush"
#include "ScreenPass.ush"


Texture2D InputTexture;
Texture2D InputTexture01;
Texture2D InputTexture02;
Texture2D InputTexture03;
Texture2D InputTexture04;
Texture2D InputTexture05;
SCREEN_PASS_TEXTURE_VIEWPORT(Color)
SamplerState ColorSampler;
float4 MyColor;

FScreenTransform SvPositionToColor;
void MainPS(
	float4 SvPosition : SV_Position,
	out float4 OutColor : SV_Target0)
{
	float2 ColorTextureUV = ApplyScreenTransform(SvPosition.xy, SvPositionToColor);
	//ColorTextureUV = clamp(ColorTextureUV, Color_UVViewportBilinearMin, Color_UVViewportBilinearMax);
	//InputTexture.Load(int3(SvPosition.xy, 0))与 InputTexture.SampleLevel(ColorSampler, ColorTextureUV, 0.0);两种一种是根据屏幕位置直接采样图片像素位置，第二种根据UV直接采样贴图，
	OutColor = InputTexture.Load(int3(SvPosition.xy, 0))*10;
	OutColor = InputTexture01.Load(int3(SvPosition.xy, 0))*10;
	OutColor = InputTexture02.Load(int3(SvPosition.xy, 0))*10;
	OutColor = InputTexture03.Load(int3(SvPosition.xy, 0))*10;
	OutColor = InputTexture04.Load(int3(SvPosition.xy, 0))*10;
	OutColor =  InputTexture.SampleLevel(ColorSampler, ColorTextureUV, 0.0);
	OutColor=	InputTexture01.Load(int3(SvPosition.xy, 0));
	if (SvPosition.x < 100 && SvPosition.y < 100)
	{
		//OutColor = float4(1.0,0.0,0.0,1.0);
		OutColor=OutColor;
	}






	
}